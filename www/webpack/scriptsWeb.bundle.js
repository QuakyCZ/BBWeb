/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/nette-forms/src/assets/netteForms.js":
/*!***********************************************************!*\
  !*** ./node_modules/nette-forms/src/assets/netteForms.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**!\r\n * NetteForms - simple form validation.\r\n *\r\n * This file is part of the Nette Framework (https://nette.org)\r\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\r\n */\r\n\r\n(function(global, factory) {\r\n\tif (!global.JSON) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\r\n\t\t\treturn factory(global);\r\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t} else { var init; }\r\n\r\n}(typeof window !== 'undefined' ? window : this, function(window) {\r\n\r\n\t'use strict';\r\n\r\n\tvar Nette = {};\r\n\tvar preventFiltering = {};\r\n\tvar formToggles = {};\r\n\tvar toggleListeners = new window.WeakMap();\r\n\r\n\tNette.formErrors = [];\r\n\tNette.version = '3.3.0';\r\n\tNette.invalidNumberMessage = 'Please enter a valid value.';\r\n\r\n\r\n\t/**\r\n\t * Function to execute when the DOM is fully loaded.\r\n\t * @private\r\n\t */\r\n\tNette.onDocumentReady = function(callback) {\r\n\t\tif (document.readyState !== 'loading') {\r\n\t\t\tcallback.call(this);\r\n\t\t} else {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', callback);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Returns the value of form element.\r\n\t */\r\n\tNette.getValue = function(elem) {\r\n\t\tvar i;\r\n\t\tif (!elem) {\r\n\t\t\treturn null;\r\n\r\n\t\t} else if (!elem.tagName) { // RadioNodeList, HTMLCollection, array\r\n\t\t\treturn elem[0] ? Nette.getValue(elem[0]) : null;\r\n\r\n\t\t} else if (elem.type === 'radio') {\r\n\t\t\tvar elements = elem.form.elements; // prevents problem with name 'item' or 'namedItem'\r\n\t\t\tfor (i = 0; i < elements.length; i++) {\r\n\t\t\t\tif (elements[i].name === elem.name && elements[i].checked) {\r\n\t\t\t\t\treturn elements[i].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\r\n\t\t} else if (elem.type === 'file') {\r\n\t\t\treturn elem.files || elem.value;\r\n\r\n\t\t} else if (elem.tagName.toLowerCase() === 'select') {\r\n\t\t\tvar index = elem.selectedIndex,\r\n\t\t\t\toptions = elem.options,\r\n\t\t\t\tvalues = [];\r\n\r\n\t\t\tif (elem.type === 'select-one') {\r\n\t\t\t\treturn index < 0 ? null : options[index].value;\r\n\t\t\t}\r\n\r\n\t\t\tfor (i = 0; i < options.length; i++) {\r\n\t\t\t\tif (options[i].selected) {\r\n\t\t\t\t\tvalues.push(options[i].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t} else if (elem.name && elem.name.substr(-2) === '[]') { // multiple elements []\r\n\t\t\telements = elem.form.elements[elem.name].tagName ? [elem] : elem.form.elements[elem.name];\r\n\t\t\tvalues = [];\r\n\r\n\t\t\tfor (i = 0; i < elements.length; i++) {\r\n\t\t\t\tif (elements[i].type !== 'checkbox' || elements[i].checked) {\r\n\t\t\t\t\tvalues.push(elements[i].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t} else if (elem.type === 'checkbox') {\r\n\t\t\treturn elem.checked;\r\n\r\n\t\t} else if (elem.tagName.toLowerCase() === 'textarea') {\r\n\t\t\treturn elem.value.replace('\\r', '');\r\n\r\n\t\t} else {\r\n\t\t\treturn elem.value.replace('\\r', '').replace(/^\\s+|\\s+$/g, '');\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Returns the effective value of form element.\r\n\t */\r\n\tNette.getEffectiveValue = function(elem, filter) {\r\n\t\tvar val = Nette.getValue(elem);\r\n\t\tif (elem.getAttribute) {\r\n\t\t\tif (val === elem.getAttribute('data-nette-empty-value')) {\r\n\t\t\t\tval = '';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (filter && preventFiltering[elem.name] === undefined) {\r\n\t\t\tpreventFiltering[elem.name] = true;\r\n\t\t\tvar ref = {value: val};\r\n\t\t\tNette.validateControl(elem, null, true, ref);\r\n\t\t\tval = ref.value;\r\n\t\t\tdelete preventFiltering[elem.name];\r\n\t\t}\r\n\t\treturn val;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Validates form element against given rules.\r\n\t */\r\n\tNette.validateControl = function(elem, rules, onlyCheck, value, emptyOptional) {\r\n\t\tvar top = !rules;\r\n\t\telem = elem.tagName ? elem : elem[0]; // RadioNodeList\r\n\t\trules = rules || JSON.parse(elem.getAttribute('data-nette-rules') || '[]');\r\n\t\tvalue = value === undefined ? {value: Nette.getEffectiveValue(elem)} : value;\r\n\t\temptyOptional = emptyOptional === undefined ? !Nette.validateRule(elem, ':filled', null, value) : emptyOptional;\r\n\r\n\t\tfor (var id = 0, len = rules.length; id < len; id++) {\r\n\t\t\tvar rule = rules[id],\r\n\t\t\t\top = rule.op.match(/(~)?([^?]+)/),\r\n\t\t\t\tcurElem = rule.control ? elem.form.elements.namedItem(rule.control) : elem;\r\n\r\n\t\t\trule.neg = op[1];\r\n\t\t\trule.op = op[2];\r\n\t\t\trule.condition = !!rule.rules;\r\n\r\n\t\t\tif (!curElem) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (emptyOptional && !rule.condition && rule.op !== ':filled') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcurElem = curElem.tagName ? curElem : curElem[0]; // RadioNodeList\r\n\t\t\tvar success = Nette.validateRule(curElem, rule.op, rule.arg, elem === curElem ? value : undefined);\r\n\r\n\t\t\tif (success === null) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (rule.neg) {\r\n\t\t\t\tsuccess = !success;\r\n\t\t\t}\r\n\r\n\t\t\tif (rule.condition && success) {\r\n\t\t\t\tif (!Nette.validateControl(elem, rule.rules, onlyCheck, value, rule.op === ':blank' ? false : emptyOptional)) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else if (!rule.condition && !success) {\r\n\t\t\t\tif (Nette.isDisabled(curElem)) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (!onlyCheck) {\r\n\t\t\t\t\tvar arr = Array.isArray(rule.arg) ? rule.arg : [rule.arg],\r\n\t\t\t\t\t\tmessage = rule.msg.replace(/%(value|\\d+)/g, function(foo, m) {\r\n\t\t\t\t\t\t\treturn Nette.getValue(m === 'value' ? curElem : elem.form.elements.namedItem(arr[m].control));\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tNette.addError(curElem, message);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (elem.type === 'number' && !elem.validity.valid) {\r\n\t\t\tif (top && !onlyCheck) {\r\n\t\t\t\tNette.addError(elem, Nette.invalidNumberMessage);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Validates whole form.\r\n\t */\r\n\tNette.validateForm = function(sender, onlyCheck) {\r\n\t\tvar form = sender.form || sender,\r\n\t\t\tscope = false;\r\n\r\n\t\tNette.formErrors = [];\r\n\r\n\t\tif (form['nette-submittedBy'] && form['nette-submittedBy'].getAttribute('formnovalidate') !== null) {\r\n\t\t\tvar scopeArr = JSON.parse(form['nette-submittedBy'].getAttribute('data-nette-validation-scope') || '[]');\r\n\t\t\tif (scopeArr.length) {\r\n\t\t\t\tscope = new RegExp('^(' + scopeArr.join('-|') + '-)');\r\n\t\t\t} else {\r\n\t\t\t\tNette.showFormErrors(form, []);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar radios = {}, i, elem;\r\n\r\n\t\tfor (i = 0; i < form.elements.length; i++) {\r\n\t\t\telem = form.elements[i];\r\n\r\n\t\t\tif (elem.tagName && !(elem.tagName.toLowerCase() in {input: 1, select: 1, textarea: 1, button: 1})) {\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t} else if (elem.type === 'radio') {\r\n\t\t\t\tif (radios[elem.name]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tradios[elem.name] = true;\r\n\t\t\t}\r\n\r\n\t\t\tif ((scope && !elem.name.replace(/]\\[|\\[|]|$/g, '-').match(scope)) || Nette.isDisabled(elem)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (!Nette.validateControl(elem, null, onlyCheck) && !Nette.formErrors.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar success = !Nette.formErrors.length;\r\n\t\tNette.showFormErrors(form, Nette.formErrors);\r\n\t\treturn success;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Check if input is disabled.\r\n\t */\r\n\tNette.isDisabled = function(elem) {\r\n\t\tif (elem.type === 'radio') {\r\n\t\t\tfor (var i = 0, elements = elem.form.elements; i < elements.length; i++) {\r\n\t\t\t\tif (elements[i].name === elem.name && !elements[i].disabled) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn elem.disabled;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Adds error message to the queue.\r\n\t */\r\n\tNette.addError = function(elem, message) {\r\n\t\tNette.formErrors.push({\r\n\t\t\telement: elem,\r\n\t\t\tmessage: message\r\n\t\t});\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Display error messages.\r\n\t */\r\n\tNette.showFormErrors = function(form, errors) {\r\n\t\tvar messages = [],\r\n\t\t\tfocusElem;\r\n\r\n\t\tfor (var i = 0; i < errors.length; i++) {\r\n\t\t\tvar elem = errors[i].element,\r\n\t\t\t\tmessage = errors[i].message;\r\n\r\n\t\t\tif (messages.indexOf(message) < 0) {\r\n\t\t\t\tmessages.push(message);\r\n\r\n\t\t\t\tif (!focusElem && elem.focus) {\r\n\t\t\t\t\tfocusElem = elem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (messages.length) {\r\n\t\t\tNette.showModal(messages.join('\\n'), function () {\r\n\t\t\t\tif (focusElem) {\r\n\t\t\t\t\tfocusElem.focus();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Display modal window.\r\n\t */\r\n\tNette.showModal = function(message, onclose) {\r\n\t\tvar dialog = document.createElement('dialog'),\r\n\t\t\tua = navigator.userAgentData;\r\n\r\n\t\tif (ua && dialog.showModal\r\n\t\t\t&& ua.brands.some(function(item) { return item.brand === 'Opera' || (item.brand === 'Chromium' && ua.mobile); })\r\n\t\t) {\r\n\t\t\tvar style = document.createElement('style');\r\n\t\t\tstyle.innerText = '.netteFormsModal { text-align: center; margin: auto; border: 2px solid black; padding: 1rem } .netteFormsModal button { padding: .1em 2em }';\r\n\r\n\t\t\tvar button = document.createElement('button');\r\n\t\t\tbutton.innerText = 'OK';\r\n\t\t\tbutton.onclick = function () {\r\n\t\t\t\tdialog.remove();\r\n\t\t\t\tonclose();\r\n\t\t\t};\r\n\r\n\t\t\tdialog.setAttribute('class', 'netteFormsModal');\r\n\t\t\tdialog.innerText = message + '\\n\\n';\r\n\t\t\tdialog.appendChild(style);\r\n\t\t\tdialog.appendChild(button);\r\n\t\t\tdocument.body.appendChild(dialog);\r\n\t\t\tdialog.showModal();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\talert(message);\r\n\t\tonclose();\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Validates single rule.\r\n\t */\r\n\tNette.validateRule = function(elem, op, arg, value) {\r\n\t\tvalue = value === undefined ? {value: Nette.getEffectiveValue(elem, true)} : value;\r\n\r\n\t\tif (op.charAt(0) === ':') {\r\n\t\t\top = op.substr(1);\r\n\t\t}\r\n\t\top = op.replace('::', '_');\r\n\t\top = op.replace(/\\\\/g, '');\r\n\r\n\t\tvar arr = Array.isArray(arg) ? arg.slice(0) : [arg];\r\n\t\tfor (var i = 0, len = arr.length; i < len; i++) {\r\n\t\t\tif (arr[i] && arr[i].control) {\r\n\t\t\t\tvar control = elem.form.elements.namedItem(arr[i].control);\r\n\t\t\t\tarr[i] = control === elem ? value.value : Nette.getEffectiveValue(control, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn Nette.validators[op]\r\n\t\t\t? Nette.validators[op](elem, Array.isArray(arg) ? arr : arr[0], value.value, value)\r\n\t\t\t: null;\r\n\t};\r\n\r\n\r\n\tNette.validators = {\r\n\t\tfilled: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number' && elem.validity.badInput) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn val !== '' && val !== false && val !== null\r\n\t\t\t\t&& (!Array.isArray(val) || !!val.length)\r\n\t\t\t\t&& (!window.FileList || !(val instanceof window.FileList) || val.length);\r\n\t\t},\r\n\r\n\t\tblank: function(elem, arg, val) {\r\n\t\t\treturn !Nette.validators.filled(elem, arg, val);\r\n\t\t},\r\n\r\n\t\tvalid: function(elem) {\r\n\t\t\treturn Nette.validateControl(elem, null, true);\r\n\t\t},\r\n\r\n\t\tequal: function(elem, arg, val) {\r\n\t\t\tif (arg === undefined) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar toString = function(val) {\r\n\t\t\t\tif (typeof val === 'number' || typeof val === 'string') {\r\n\t\t\t\t\treturn '' + val;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn val === true ? '1' : '';\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tval = Array.isArray(val) ? val : [val];\r\n\t\t\targ = Array.isArray(arg) ? arg : [arg];\r\n\t\t\tloop:\r\n\t\t\tfor (var i1 = 0, len1 = val.length; i1 < len1; i1++) {\r\n\t\t\t\tfor (var i2 = 0, len2 = arg.length; i2 < len2; i2++) {\r\n\t\t\t\t\tif (toString(val[i1]) === toString(arg[i2])) {\r\n\t\t\t\t\t\tcontinue loop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn val.length > 0;\r\n\t\t},\r\n\r\n\t\tnotEqual: function(elem, arg, val) {\r\n\t\t\treturn arg === undefined ? null : !Nette.validators.equal(elem, arg, val);\r\n\t\t},\r\n\r\n\t\tminLength: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number') {\r\n\t\t\t\tif (elem.validity.tooShort) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn val.length >= arg;\r\n\t\t},\r\n\r\n\t\tmaxLength: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number') {\r\n\t\t\t\tif (elem.validity.tooLong) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn val.length <= arg;\r\n\t\t},\r\n\r\n\t\tlength: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number') {\r\n\t\t\t\tif (elem.validity.tooShort || elem.validity.tooLong) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\targ = Array.isArray(arg) ? arg : [arg, arg];\r\n\t\t\treturn (arg[0] === null || val.length >= arg[0]) && (arg[1] === null || val.length <= arg[1]);\r\n\t\t},\r\n\r\n\t\temail: function(elem, arg, val) {\r\n\t\t\treturn (/^(\"([ !#-[\\]-~]|\\\\[ -~])+\"|[-a-z0-9!#$%&'*+/=?^_`{|}~]+(\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*)@([0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,61}[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?\\.)+[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,17}[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?$/i).test(val);\r\n\t\t},\r\n\r\n\t\turl: function(elem, arg, val, value) {\r\n\t\t\tif (!(/^[a-z\\d+.-]+:/).test(val)) {\r\n\t\t\t\tval = 'https://' + val;\r\n\t\t\t}\r\n\t\t\tif ((/^https?:\\/\\/((([-_0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]+\\.)*[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,61}[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?\\.)?[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,17}[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[[0-9a-f:]{3,39}\\])(:\\d{1,5})?(\\/\\S*)?$/i).test(val)) {\r\n\t\t\t\tvalue.value = val;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tregexp: function(elem, arg, val) {\r\n\t\t\tvar parts = typeof arg === 'string' ? arg.match(/^\\/(.*)\\/([imu]*)$/) : false;\r\n\t\t\ttry {\r\n\t\t\t\treturn parts && (new RegExp(parts[1], parts[2].replace('u', ''))).test(val);\r\n\t\t\t} catch (e) {} // eslint-disable-line no-empty\r\n\t\t},\r\n\r\n\t\tpattern: function(elem, arg, val, value, caseInsensitive) {\r\n\t\t\tif (typeof arg !== 'string') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar regExp = new RegExp('^(?:' + arg + ')$', caseInsensitive ? 'ui' : 'u');\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tregExp = new RegExp('^(?:' + arg + ')$', caseInsensitive ? 'i' : '');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (window.FileList && val instanceof FileList) {\r\n\t\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\t\tif (!regExp.test(val[i].name)) {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn regExp.test(val);\r\n\t\t\t} catch (e) {} // eslint-disable-line no-empty\r\n\t\t},\r\n\r\n\t\tpatternCaseInsensitive: function(elem, arg, val) {\r\n\t\t\treturn Nette.validators.pattern(elem, arg, val, null, true);\r\n\t\t},\r\n\r\n\t\tnumeric: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number' && elem.validity.badInput) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn (/^[0-9]+$/).test(val);\r\n\t\t},\r\n\r\n\t\tinteger: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number' && elem.validity.badInput) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn (/^-?[0-9]+$/).test(val);\r\n\t\t},\r\n\r\n\t\t'float': function(elem, arg, val, value) {\r\n\t\t\tif (elem.type === 'number' && elem.validity.badInput) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tval = val.replace(/ +/g, '').replace(/,/g, '.');\r\n\t\t\tif ((/^-?[0-9]*\\.?[0-9]+$/).test(val)) {\r\n\t\t\t\tvalue.value = val;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\tmin: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number') {\r\n\t\t\t\tif (elem.validity.rangeUnderflow) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arg === null || parseFloat(val) >= arg;\r\n\t\t},\r\n\r\n\t\tmax: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number') {\r\n\t\t\t\tif (elem.validity.rangeOverflow) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arg === null || parseFloat(val) <= arg;\r\n\t\t},\r\n\r\n\t\trange: function(elem, arg, val) {\r\n\t\t\tif (elem.type === 'number') {\r\n\t\t\t\tif (elem.validity.rangeUnderflow || elem.validity.rangeOverflow) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Array.isArray(arg) ?\r\n\t\t\t\t((arg[0] === null || parseFloat(val) >= arg[0]) && (arg[1] === null || parseFloat(val) <= arg[1])) : null;\r\n\t\t},\r\n\r\n\t\tsubmitted: function(elem) {\r\n\t\t\treturn elem.form['nette-submittedBy'] === elem;\r\n\t\t},\r\n\r\n\t\tfileSize: function(elem, arg, val) {\r\n\t\t\tif (window.FileList) {\r\n\t\t\t\tfor (var i = 0; i < val.length; i++) {\r\n\t\t\t\t\tif (val[i].size > arg) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\tmimeType: function (elem, arg, val) {\r\n\t\t\targ = Array.isArray(arg) ? arg : [arg];\r\n\t\t\tfor (var i = 0, len = arg.length, re = []; i < len; i++) {\r\n\t\t\t\tre.push('^' + arg[i].replace(/([^\\w])/g, '\\\\$1').replace('\\\\*', '.*') + '$');\r\n\t\t\t}\r\n\t\t\tre = new RegExp(re.join('|'));\r\n\r\n\t\t\tif (window.FileList && val instanceof FileList) {\r\n\t\t\t\tfor (i = 0; i < val.length; i++) {\r\n\t\t\t\t\tif (val[i].type && !re.test(val[i].type)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (elem.validity.badInput) {\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\timage: function (elem, arg, val) {\r\n\t\t\treturn Nette.validators.mimeType(elem, ['image/gif', 'image/png', 'image/jpeg', 'image/webp'], val);\r\n\t\t},\r\n\r\n\t\t'static': function (elem, arg) {\r\n\t\t\treturn arg;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Process all toggles in form.\r\n\t */\r\n\tNette.toggleForm = function(form, event) {\r\n\t\tvar i;\r\n\t\tformToggles = {};\r\n\t\tfor (i = 0; i < form.elements.length; i++) {\r\n\t\t\tif (form.elements[i].tagName.toLowerCase() in {input: 1, select: 1, textarea: 1, button: 1}) {\r\n\t\t\t\tNette.toggleControl(form.elements[i], null, null, !event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i in formToggles) {\r\n\t\t\tNette.toggle(i, formToggles[i].state, formToggles[i].elem, event);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Process toggles on form element.\r\n\t */\r\n\tNette.toggleControl = function(elem, rules, success, firsttime, value, emptyOptional) {\r\n\t\trules = rules || JSON.parse(elem.getAttribute('data-nette-rules') || '[]');\r\n\t\tvalue = value === undefined ? {value: Nette.getEffectiveValue(elem)} : value;\r\n\t\temptyOptional = emptyOptional === undefined ? !Nette.validateRule(elem, ':filled', null, value) : emptyOptional;\r\n\r\n\t\tvar has = false,\r\n\t\t\thandler = function (e) {\r\n\t\t\t\tNette.toggleForm(elem.form, e);\r\n\t\t\t},\r\n\t\t\tcurSuccess;\r\n\r\n\t\tfor (var id = 0, len = rules.length; id < len; id++) {\r\n\t\t\tvar rule = rules[id],\r\n\t\t\t\top = rule.op.match(/(~)?([^?]+)/),\r\n\t\t\t\tcurElem = rule.control ? elem.form.elements.namedItem(rule.control) : elem;\r\n\r\n\t\t\trule.neg = op[1];\r\n\t\t\trule.op = op[2];\r\n\t\t\trule.condition = !!rule.rules;\r\n\r\n\t\t\tif (!curElem) {\r\n\t\t\t\tcontinue;\r\n\t\t\t} else if (emptyOptional && !rule.condition && rule.op !== ':filled') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tcurSuccess = success;\r\n\t\t\tif (success !== false) {\r\n\t\t\t\tcurSuccess = Nette.validateRule(curElem, rule.op, rule.arg, elem === curElem ? value : undefined);\r\n\t\t\t\tif (curSuccess === null) {\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t} else if (rule.neg) {\r\n\t\t\t\t\tcurSuccess = !curSuccess;\r\n\t\t\t\t}\r\n\t\t\t\tif (!rule.condition) {\r\n\t\t\t\t\tsuccess = curSuccess;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ((rule.condition && Nette.toggleControl(elem, rule.rules, curSuccess, firsttime, value, rule.op === ':blank' ? false : emptyOptional)) || rule.toggle) {\r\n\t\t\t\thas = true;\r\n\t\t\t\tif (firsttime) {\r\n\t\t\t\t\tvar name = curElem.tagName ? curElem.name : curElem[0].name,\r\n\t\t\t\t\t\tels = curElem.tagName ? curElem.form.elements : curElem;\r\n\r\n\t\t\t\t\tfor (var i = 0; i < els.length; i++) {\r\n\t\t\t\t\t\tif (els[i].name === name && !toggleListeners.has(els[i])) {\r\n\t\t\t\t\t\t\tels[i].addEventListener('change', handler);\r\n\t\t\t\t\t\t\ttoggleListeners.set(els[i], null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (var toggleId in rule.toggle || []) {\r\n\t\t\t\t\tformToggles[toggleId] = formToggles[toggleId] || {elem: elem};\r\n\t\t\t\t\tformToggles[toggleId].state = formToggles[toggleId].state || (rule.toggle[toggleId] ? curSuccess : !curSuccess);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn has;\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Displays or hides HTML element.\r\n\t */\r\n\tNette.toggle = function(selector, visible, srcElement, event) { // eslint-disable-line no-unused-vars\r\n\t\tif (/^\\w[\\w.:-]*$/.test(selector)) { // id\r\n\t\t\tselector = '#' + selector;\r\n\t\t}\r\n\t\tvar elems = document.querySelectorAll(selector);\r\n\t\tfor (var i = 0; i < elems.length; i++) {\r\n\t\t\telems[i].hidden = !visible;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Compact checkboxes\r\n\t */\r\n\tNette.compactCheckboxes = function(form) {\r\n\t\tvar name, i, elem, values = {};\r\n\r\n\t\tfor (i = 0; i < form.elements.length; i++) {\r\n\t\t\telem = form.elements[i];\r\n\t\t\tif (elem.tagName\r\n\t\t\t\t&& elem.tagName.toLowerCase() === 'input'\r\n\t\t\t\t&& elem.type === 'checkbox'\r\n\t\t\t) {\r\n\t\t\t\tif (elem.name\r\n\t\t\t\t\t&& elem.name.substr(-2) === '[]'\r\n\t\t\t\t) {\r\n\t\t\t\t\tname = elem.name.substr(0, elem.name.length - 2);\r\n\t\t\t\t\telem.removeAttribute('name');\r\n\t\t\t\t\telem.setAttribute('data-nette-name', name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (name = elem.getAttribute('data-nette-name')) { // eslint-disable-line no-cond-assign\r\n\t\t\t\t\tvalues[name] = values[name] || [];\r\n\t\t\t\t\tif (elem.checked && !elem.disabled) {\r\n\t\t\t\t\t\tvalues[name].push(elem.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (name in values) {\r\n\t\t\tif (form.elements[name] === undefined) {\r\n\t\t\t\telem = document.createElement('input');\r\n\t\t\t\telem.setAttribute('name', name);\r\n\t\t\t\telem.setAttribute('type', 'hidden');\r\n\t\t\t\tform.appendChild(elem);\r\n\t\t\t}\r\n\t\t\tform.elements[name].value = values[name].join(',');\r\n\t\t\tform.elements[name].disabled = values[name].length === 0;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Setup handlers.\r\n\t */\r\n\tNette.initForm = function(form) {\r\n\t\tif (form.method === 'get' && form.hasAttribute('data-nette-compact')) {\r\n\t\t\tform.addEventListener('submit', function() {\r\n\t\t\t\tNette.compactCheckboxes(form);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tcheck: {\r\n\t\t\tfor (var i = 0; i < form.elements.length; i++) {\r\n\t\t\t\tif (form.elements[i].getAttribute('data-nette-rules')) {\r\n\t\t\t\t\tbreak check;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tNette.toggleForm(form);\r\n\r\n\t\tif (form.noValidate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tform.noValidate = true;\r\n\r\n\t\tform.addEventListener('submit', function(e) {\r\n\t\t\tif (!Nette.validateForm(form)) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tNette.initOnLoad = function() {\r\n\t\tNette.onDocumentReady(function() {\r\n\t\t\tfor (var i = 0; i < document.forms.length; i++) {\r\n\t\t\t\tNette.initForm(document.forms[i]);\r\n\t\t\t}\r\n\r\n\t\t\tdocument.body.addEventListener('click', function(e) {\r\n\t\t\t\tvar target = e.target;\r\n\t\t\t\twhile (target) {\r\n\t\t\t\t\tif (target.form && target.type in {submit: 1, image: 1}) {\r\n\t\t\t\t\t\ttarget.form['nette-submittedBy'] = target;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttarget = target.parentNode;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Converts string to web safe characters [a-z0-9-] text.\r\n\t */\r\n\tNette.webalize = function(s) {\r\n\t\ts = s.toLowerCase();\r\n\t\tvar res = '', i, ch;\r\n\t\tfor (i = 0; i < s.length; i++) {\r\n\t\t\tch = Nette.webalizeTable[s.charAt(i)];\r\n\t\t\tres += ch ? ch : s.charAt(i);\r\n\t\t}\r\n\t\treturn res.replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');\r\n\t};\r\n\r\n\tNette.webalizeTable = {\\u00e1: 'a', \\u00e4: 'a', \\u010d: 'c', \\u010f: 'd', \\u00e9: 'e', \\u011b: 'e', \\u00ed: 'i', \\u013e: 'l', \\u0148: 'n', \\u00f3: 'o', \\u00f4: 'o', \\u0159: 'r', \\u0161: 's', \\u0165: 't', \\u00fa: 'u', \\u016f: 'u', \\u00fd: 'y', \\u017e: 'z'};\r\n\r\n\treturn Nette;\r\n}));\r\n\n\n//# sourceURL=webpack:///./node_modules/nette-forms/src/assets/netteForms.js?");

/***/ }),

/***/ "./vendor/nette/forms/src/assets/netteForms.js":
/*!*****************************************************!*\
  !*** ./vendor/nette/forms/src/assets/netteForms.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/**!\n * NetteForms - simple form validation.\n *\n * This file is part of the Nette Framework (https://nette.org)\n * Copyright (c) 2004 David Grudl (https://davidgrudl.com)\n */\n(function (global, factory) {\n  if (!global.JSON) {\n    return;\n  }\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return factory(global);\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var init; }\n})(typeof window !== 'undefined' ? window : this, function (window) {\n  'use strict';\n\n  var Nette = {};\n  var preventFiltering = {};\n  var formToggles = {};\n  var toggleListeners = new window.WeakMap();\n  Nette.formErrors = [];\n  Nette.version = '3.3.0';\n  Nette.invalidNumberMessage = 'Please enter a valid value.';\n  /**\n   * Function to execute when the DOM is fully loaded.\n   * @private\n   */\n\n  Nette.onDocumentReady = function (callback) {\n    if (document.readyState !== 'loading') {\n      callback.call(this);\n    } else {\n      document.addEventListener('DOMContentLoaded', callback);\n    }\n  };\n  /**\n   * Returns the value of form element.\n   */\n\n\n  Nette.getValue = function (elem) {\n    var i;\n\n    if (!elem) {\n      return null;\n    } else if (!elem.tagName) {\n      // RadioNodeList, HTMLCollection, array\n      return elem[0] ? Nette.getValue(elem[0]) : null;\n    } else if (elem.type === 'radio') {\n      var elements = elem.form.elements; // prevents problem with name 'item' or 'namedItem'\n\n      for (i = 0; i < elements.length; i++) {\n        if (elements[i].name === elem.name && elements[i].checked) {\n          return elements[i].value;\n        }\n      }\n\n      return null;\n    } else if (elem.type === 'file') {\n      return elem.files || elem.value;\n    } else if (elem.tagName.toLowerCase() === 'select') {\n      var index = elem.selectedIndex,\n          options = elem.options,\n          values = [];\n\n      if (elem.type === 'select-one') {\n        return index < 0 ? null : options[index].value;\n      }\n\n      for (i = 0; i < options.length; i++) {\n        if (options[i].selected) {\n          values.push(options[i].value);\n        }\n      }\n\n      return values;\n    } else if (elem.name && elem.name.substr(-2) === '[]') {\n      // multiple elements []\n      elements = elem.form.elements[elem.name].tagName ? [elem] : elem.form.elements[elem.name];\n      values = [];\n\n      for (i = 0; i < elements.length; i++) {\n        if (elements[i].type !== 'checkbox' || elements[i].checked) {\n          values.push(elements[i].value);\n        }\n      }\n\n      return values;\n    } else if (elem.type === 'checkbox') {\n      return elem.checked;\n    } else if (elem.tagName.toLowerCase() === 'textarea') {\n      return elem.value.replace('\\r', '');\n    } else {\n      return elem.value.replace('\\r', '').replace(/^\\s+|\\s+$/g, '');\n    }\n  };\n  /**\n   * Returns the effective value of form element.\n   */\n\n\n  Nette.getEffectiveValue = function (elem, filter) {\n    var val = Nette.getValue(elem);\n\n    if (elem.getAttribute) {\n      if (val === elem.getAttribute('data-nette-empty-value')) {\n        val = '';\n      }\n    }\n\n    if (filter && preventFiltering[elem.name] === undefined) {\n      preventFiltering[elem.name] = true;\n      var ref = {\n        value: val\n      };\n      Nette.validateControl(elem, null, true, ref);\n      val = ref.value;\n      delete preventFiltering[elem.name];\n    }\n\n    return val;\n  };\n  /**\n   * Validates form element against given rules.\n   */\n\n\n  Nette.validateControl = function (elem, rules, onlyCheck, value, emptyOptional) {\n    var top = !rules;\n    elem = elem.tagName ? elem : elem[0]; // RadioNodeList\n\n    rules = rules || JSON.parse(elem.getAttribute('data-nette-rules') || '[]');\n    value = value === undefined ? {\n      value: Nette.getEffectiveValue(elem)\n    } : value;\n    emptyOptional = emptyOptional === undefined ? !Nette.validateRule(elem, ':filled', null, value) : emptyOptional;\n\n    for (var id = 0, len = rules.length; id < len; id++) {\n      var rule = rules[id],\n          op = rule.op.match(/(~)?([^?]+)/),\n          curElem = rule.control ? elem.form.elements.namedItem(rule.control) : elem;\n      rule.neg = op[1];\n      rule.op = op[2];\n      rule.condition = !!rule.rules;\n\n      if (!curElem) {\n        continue;\n      } else if (emptyOptional && !rule.condition && rule.op !== ':filled') {\n        continue;\n      }\n\n      curElem = curElem.tagName ? curElem : curElem[0]; // RadioNodeList\n\n      var success = Nette.validateRule(curElem, rule.op, rule.arg, elem === curElem ? value : undefined);\n\n      if (success === null) {\n        continue;\n      } else if (rule.neg) {\n        success = !success;\n      }\n\n      if (rule.condition && success) {\n        if (!Nette.validateControl(elem, rule.rules, onlyCheck, value, rule.op === ':blank' ? false : emptyOptional)) {\n          return false;\n        }\n      } else if (!rule.condition && !success) {\n        if (Nette.isDisabled(curElem)) {\n          continue;\n        }\n\n        if (!onlyCheck) {\n          var arr = Array.isArray(rule.arg) ? rule.arg : [rule.arg],\n              message = rule.msg.replace(/%(value|\\d+)/g, function (foo, m) {\n            return Nette.getValue(m === 'value' ? curElem : elem.form.elements.namedItem(arr[m].control));\n          });\n          Nette.addError(curElem, message);\n        }\n\n        return false;\n      }\n    }\n\n    if (elem.type === 'number' && !elem.validity.valid) {\n      if (top && !onlyCheck) {\n        Nette.addError(elem, Nette.invalidNumberMessage);\n      }\n\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Validates whole form.\n   */\n\n\n  Nette.validateForm = function (sender, onlyCheck) {\n    var form = sender.form || sender,\n        scope = false;\n    Nette.formErrors = [];\n\n    if (form['nette-submittedBy'] && form['nette-submittedBy'].getAttribute('formnovalidate') !== null) {\n      var scopeArr = JSON.parse(form['nette-submittedBy'].getAttribute('data-nette-validation-scope') || '[]');\n\n      if (scopeArr.length) {\n        scope = new RegExp('^(' + scopeArr.join('-|') + '-)');\n      } else {\n        Nette.showFormErrors(form, []);\n        return true;\n      }\n    }\n\n    var radios = {},\n        i,\n        elem;\n\n    for (i = 0; i < form.elements.length; i++) {\n      elem = form.elements[i];\n\n      if (elem.tagName && !(elem.tagName.toLowerCase() in {\n        input: 1,\n        select: 1,\n        textarea: 1,\n        button: 1\n      })) {\n        continue;\n      } else if (elem.type === 'radio') {\n        if (radios[elem.name]) {\n          continue;\n        }\n\n        radios[elem.name] = true;\n      }\n\n      if (scope && !elem.name.replace(/]\\[|\\[|]|$/g, '-').match(scope) || Nette.isDisabled(elem)) {\n        continue;\n      }\n\n      if (!Nette.validateControl(elem, null, onlyCheck) && !Nette.formErrors.length) {\n        return false;\n      }\n    }\n\n    var success = !Nette.formErrors.length;\n    Nette.showFormErrors(form, Nette.formErrors);\n    return success;\n  };\n  /**\n   * Check if input is disabled.\n   */\n\n\n  Nette.isDisabled = function (elem) {\n    if (elem.type === 'radio') {\n      for (var i = 0, elements = elem.form.elements; i < elements.length; i++) {\n        if (elements[i].name === elem.name && !elements[i].disabled) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return elem.disabled;\n  };\n  /**\n   * Adds error message to the queue.\n   */\n\n\n  Nette.addError = function (elem, message) {\n    Nette.formErrors.push({\n      element: elem,\n      message: message\n    });\n  };\n  /**\n   * Display error messages.\n   */\n\n\n  Nette.showFormErrors = function (form, errors) {\n    var messages = [],\n        focusElem;\n\n    for (var i = 0; i < errors.length; i++) {\n      var elem = errors[i].element,\n          message = errors[i].message;\n\n      if (messages.indexOf(message) < 0) {\n        messages.push(message);\n\n        if (!focusElem && elem.focus) {\n          focusElem = elem;\n        }\n      }\n    }\n\n    if (messages.length) {\n      Nette.showModal(messages.join('\\n'), function () {\n        if (focusElem) {\n          focusElem.focus();\n        }\n      });\n    }\n  };\n  /**\n   * Display modal window.\n   */\n\n\n  Nette.showModal = function (message, onclose) {\n    var dialog = document.createElement('dialog'),\n        ua = navigator.userAgentData;\n\n    if (ua && dialog.showModal && ua.brands.some(function (item) {\n      return item.brand === 'Opera' || item.brand === 'Chromium' && ua.mobile;\n    })) {\n      var style = document.createElement('style');\n      style.innerText = '.netteFormsModal { text-align: center; margin: auto; border: 2px solid black; padding: 1rem } .netteFormsModal button { padding: .1em 2em }';\n      var button = document.createElement('button');\n      button.innerText = 'OK';\n\n      button.onclick = function () {\n        dialog.remove();\n        onclose();\n      };\n\n      dialog.setAttribute('class', 'netteFormsModal');\n      dialog.innerText = message + '\\n\\n';\n      dialog.appendChild(style);\n      dialog.appendChild(button);\n      document.body.appendChild(dialog);\n      dialog.showModal();\n      return;\n    }\n\n    alert(message);\n    onclose();\n  };\n  /**\n   * Validates single rule.\n   */\n\n\n  Nette.validateRule = function (elem, op, arg, value) {\n    value = value === undefined ? {\n      value: Nette.getEffectiveValue(elem, true)\n    } : value;\n\n    if (op.charAt(0) === ':') {\n      op = op.substr(1);\n    }\n\n    op = op.replace('::', '_');\n    op = op.replace(/\\\\/g, '');\n    var arr = Array.isArray(arg) ? arg.slice(0) : [arg];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (arr[i] && arr[i].control) {\n        var control = elem.form.elements.namedItem(arr[i].control);\n        arr[i] = control === elem ? value.value : Nette.getEffectiveValue(control, true);\n      }\n    }\n\n    return Nette.validators[op] ? Nette.validators[op](elem, Array.isArray(arg) ? arr : arr[0], value.value, value) : null;\n  };\n\n  Nette.validators = {\n    filled: function filled(elem, arg, val) {\n      if (elem.type === 'number' && elem.validity.badInput) {\n        return true;\n      }\n\n      return val !== '' && val !== false && val !== null && (!Array.isArray(val) || !!val.length) && (!window.FileList || !(val instanceof window.FileList) || val.length);\n    },\n    blank: function blank(elem, arg, val) {\n      return !Nette.validators.filled(elem, arg, val);\n    },\n    valid: function valid(elem) {\n      return Nette.validateControl(elem, null, true);\n    },\n    equal: function equal(elem, arg, val) {\n      if (arg === undefined) {\n        return null;\n      }\n\n      var toString = function toString(val) {\n        if (typeof val === 'number' || typeof val === 'string') {\n          return '' + val;\n        } else {\n          return val === true ? '1' : '';\n        }\n      };\n\n      val = Array.isArray(val) ? val : [val];\n      arg = Array.isArray(arg) ? arg : [arg];\n\n      loop: for (var i1 = 0, len1 = val.length; i1 < len1; i1++) {\n        for (var i2 = 0, len2 = arg.length; i2 < len2; i2++) {\n          if (toString(val[i1]) === toString(arg[i2])) {\n            continue loop;\n          }\n        }\n\n        return false;\n      }\n\n      return val.length > 0;\n    },\n    notEqual: function notEqual(elem, arg, val) {\n      return arg === undefined ? null : !Nette.validators.equal(elem, arg, val);\n    },\n    minLength: function minLength(elem, arg, val) {\n      if (elem.type === 'number') {\n        if (elem.validity.tooShort) {\n          return false;\n        } else if (elem.validity.badInput) {\n          return null;\n        }\n      }\n\n      return val.length >= arg;\n    },\n    maxLength: function maxLength(elem, arg, val) {\n      if (elem.type === 'number') {\n        if (elem.validity.tooLong) {\n          return false;\n        } else if (elem.validity.badInput) {\n          return null;\n        }\n      }\n\n      return val.length <= arg;\n    },\n    length: function length(elem, arg, val) {\n      if (elem.type === 'number') {\n        if (elem.validity.tooShort || elem.validity.tooLong) {\n          return false;\n        } else if (elem.validity.badInput) {\n          return null;\n        }\n      }\n\n      arg = Array.isArray(arg) ? arg : [arg, arg];\n      return (arg[0] === null || val.length >= arg[0]) && (arg[1] === null || val.length <= arg[1]);\n    },\n    email: function email(elem, arg, val) {\n      return /^(\"([ !#-[\\]-~]|\\\\[ -~])+\"|[-a-z0-9!#$%&'*+/=?^_`{|}~]+(\\.[-a-z0-9!#$%&'*+/=?^_`{|}~]+)*)@([0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,61}[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?\\.)+[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,17}[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?$/i.test(val);\n    },\n    url: function url(elem, arg, val, value) {\n      if (!/^[a-z\\d+.-]+:/.test(val)) {\n        val = 'https://' + val;\n      }\n\n      if (/^https?:\\/\\/((([-_0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]+\\.)*[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,61}[0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?\\.)?[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]([-0-9a-z\\u00C0-\\u02FF\\u0370-\\u1EFF]{0,17}[a-z\\u00C0-\\u02FF\\u0370-\\u1EFF])?|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\[[0-9a-f:]{3,39}\\])(:\\d{1,5})?(\\/\\S*)?$/i.test(val)) {\n        value.value = val;\n        return true;\n      }\n\n      return false;\n    },\n    regexp: function regexp(elem, arg, val) {\n      var parts = typeof arg === 'string' ? arg.match(/^\\/(.*)\\/([imu]*)$/) : false;\n\n      try {\n        return parts && new RegExp(parts[1], parts[2].replace('u', '')).test(val);\n      } catch (e) {} // eslint-disable-line no-empty\n\n    },\n    pattern: function pattern(elem, arg, val, value, caseInsensitive) {\n      if (typeof arg !== 'string') {\n        return null;\n      }\n\n      try {\n        try {\n          var regExp = new RegExp('^(?:' + arg + ')$', caseInsensitive ? 'ui' : 'u');\n        } catch (e) {\n          regExp = new RegExp('^(?:' + arg + ')$', caseInsensitive ? 'i' : '');\n        }\n\n        if (window.FileList && val instanceof FileList) {\n          for (var i = 0; i < val.length; i++) {\n            if (!regExp.test(val[i].name)) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        return regExp.test(val);\n      } catch (e) {} // eslint-disable-line no-empty\n\n    },\n    patternCaseInsensitive: function patternCaseInsensitive(elem, arg, val) {\n      return Nette.validators.pattern(elem, arg, val, null, true);\n    },\n    numeric: function numeric(elem, arg, val) {\n      if (elem.type === 'number' && elem.validity.badInput) {\n        return false;\n      }\n\n      return /^[0-9]+$/.test(val);\n    },\n    integer: function integer(elem, arg, val) {\n      if (elem.type === 'number' && elem.validity.badInput) {\n        return false;\n      }\n\n      return /^-?[0-9]+$/.test(val);\n    },\n    'float': function float(elem, arg, val, value) {\n      if (elem.type === 'number' && elem.validity.badInput) {\n        return false;\n      }\n\n      val = val.replace(/ +/g, '').replace(/,/g, '.');\n\n      if (/^-?[0-9]*\\.?[0-9]+$/.test(val)) {\n        value.value = val;\n        return true;\n      }\n\n      return false;\n    },\n    min: function min(elem, arg, val) {\n      if (elem.type === 'number') {\n        if (elem.validity.rangeUnderflow) {\n          return false;\n        } else if (elem.validity.badInput) {\n          return null;\n        }\n      }\n\n      return arg === null || parseFloat(val) >= arg;\n    },\n    max: function max(elem, arg, val) {\n      if (elem.type === 'number') {\n        if (elem.validity.rangeOverflow) {\n          return false;\n        } else if (elem.validity.badInput) {\n          return null;\n        }\n      }\n\n      return arg === null || parseFloat(val) <= arg;\n    },\n    range: function range(elem, arg, val) {\n      if (elem.type === 'number') {\n        if (elem.validity.rangeUnderflow || elem.validity.rangeOverflow) {\n          return false;\n        } else if (elem.validity.badInput) {\n          return null;\n        }\n      }\n\n      return Array.isArray(arg) ? (arg[0] === null || parseFloat(val) >= arg[0]) && (arg[1] === null || parseFloat(val) <= arg[1]) : null;\n    },\n    submitted: function submitted(elem) {\n      return elem.form['nette-submittedBy'] === elem;\n    },\n    fileSize: function fileSize(elem, arg, val) {\n      if (window.FileList) {\n        for (var i = 0; i < val.length; i++) {\n          if (val[i].size > arg) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n    mimeType: function mimeType(elem, arg, val) {\n      arg = Array.isArray(arg) ? arg : [arg];\n\n      for (var i = 0, len = arg.length, re = []; i < len; i++) {\n        re.push('^' + arg[i].replace(/([^\\w])/g, '\\\\$1').replace('\\\\*', '.*') + '$');\n      }\n\n      re = new RegExp(re.join('|'));\n\n      if (window.FileList && val instanceof FileList) {\n        for (i = 0; i < val.length; i++) {\n          if (val[i].type && !re.test(val[i].type)) {\n            return false;\n          } else if (elem.validity.badInput) {\n            return null;\n          }\n        }\n      }\n\n      return true;\n    },\n    image: function image(elem, arg, val) {\n      return Nette.validators.mimeType(elem, ['image/gif', 'image/png', 'image/jpeg', 'image/webp'], val);\n    },\n    'static': function _static(elem, arg) {\n      return arg;\n    }\n  };\n  /**\n   * Process all toggles in form.\n   */\n\n  Nette.toggleForm = function (form, event) {\n    var i;\n    formToggles = {};\n\n    for (i = 0; i < form.elements.length; i++) {\n      if (form.elements[i].tagName.toLowerCase() in {\n        input: 1,\n        select: 1,\n        textarea: 1,\n        button: 1\n      }) {\n        Nette.toggleControl(form.elements[i], null, null, !event);\n      }\n    }\n\n    for (i in formToggles) {\n      Nette.toggle(i, formToggles[i].state, formToggles[i].elem, event);\n    }\n  };\n  /**\n   * Process toggles on form element.\n   */\n\n\n  Nette.toggleControl = function (elem, rules, success, firsttime, value, emptyOptional) {\n    rules = rules || JSON.parse(elem.getAttribute('data-nette-rules') || '[]');\n    value = value === undefined ? {\n      value: Nette.getEffectiveValue(elem)\n    } : value;\n    emptyOptional = emptyOptional === undefined ? !Nette.validateRule(elem, ':filled', null, value) : emptyOptional;\n\n    var has = false,\n        handler = function handler(e) {\n      Nette.toggleForm(elem.form, e);\n    },\n        curSuccess;\n\n    for (var id = 0, len = rules.length; id < len; id++) {\n      var rule = rules[id],\n          op = rule.op.match(/(~)?([^?]+)/),\n          curElem = rule.control ? elem.form.elements.namedItem(rule.control) : elem;\n      rule.neg = op[1];\n      rule.op = op[2];\n      rule.condition = !!rule.rules;\n\n      if (!curElem) {\n        continue;\n      } else if (emptyOptional && !rule.condition && rule.op !== ':filled') {\n        continue;\n      }\n\n      curSuccess = success;\n\n      if (success !== false) {\n        curSuccess = Nette.validateRule(curElem, rule.op, rule.arg, elem === curElem ? value : undefined);\n\n        if (curSuccess === null) {\n          continue;\n        } else if (rule.neg) {\n          curSuccess = !curSuccess;\n        }\n\n        if (!rule.condition) {\n          success = curSuccess;\n        }\n      }\n\n      if (rule.condition && Nette.toggleControl(elem, rule.rules, curSuccess, firsttime, value, rule.op === ':blank' ? false : emptyOptional) || rule.toggle) {\n        has = true;\n\n        if (firsttime) {\n          var name = curElem.tagName ? curElem.name : curElem[0].name,\n              els = curElem.tagName ? curElem.form.elements : curElem;\n\n          for (var i = 0; i < els.length; i++) {\n            if (els[i].name === name && !toggleListeners.has(els[i])) {\n              els[i].addEventListener('change', handler);\n              toggleListeners.set(els[i], null);\n            }\n          }\n        }\n\n        for (var toggleId in rule.toggle || []) {\n          formToggles[toggleId] = formToggles[toggleId] || {\n            elem: elem\n          };\n          formToggles[toggleId].state = formToggles[toggleId].state || (rule.toggle[toggleId] ? curSuccess : !curSuccess);\n        }\n      }\n    }\n\n    return has;\n  };\n  /**\n   * Displays or hides HTML element.\n   */\n\n\n  Nette.toggle = function (selector, visible, srcElement, event) {\n    // eslint-disable-line no-unused-vars\n    if (/^\\w[\\w.:-]*$/.test(selector)) {\n      // id\n      selector = '#' + selector;\n    }\n\n    var elems = document.querySelectorAll(selector);\n\n    for (var i = 0; i < elems.length; i++) {\n      elems[i].hidden = !visible;\n    }\n  };\n  /**\n   * Compact checkboxes\n   */\n\n\n  Nette.compactCheckboxes = function (form) {\n    var name,\n        i,\n        elem,\n        values = {};\n\n    for (i = 0; i < form.elements.length; i++) {\n      elem = form.elements[i];\n\n      if (elem.tagName && elem.tagName.toLowerCase() === 'input' && elem.type === 'checkbox') {\n        if (elem.name && elem.name.substr(-2) === '[]') {\n          name = elem.name.substr(0, elem.name.length - 2);\n          elem.removeAttribute('name');\n          elem.setAttribute('data-nette-name', name);\n        }\n\n        if (name = elem.getAttribute('data-nette-name')) {\n          // eslint-disable-line no-cond-assign\n          values[name] = values[name] || [];\n\n          if (elem.checked && !elem.disabled) {\n            values[name].push(elem.value);\n          }\n        }\n      }\n    }\n\n    for (name in values) {\n      if (form.elements[name] === undefined) {\n        elem = document.createElement('input');\n        elem.setAttribute('name', name);\n        elem.setAttribute('type', 'hidden');\n        form.appendChild(elem);\n      }\n\n      form.elements[name].value = values[name].join(',');\n      form.elements[name].disabled = values[name].length === 0;\n    }\n  };\n  /**\n   * Setup handlers.\n   */\n\n\n  Nette.initForm = function (form) {\n    if (form.method === 'get' && form.hasAttribute('data-nette-compact')) {\n      form.addEventListener('submit', function () {\n        Nette.compactCheckboxes(form);\n      });\n    }\n\n    check: {\n      for (var i = 0; i < form.elements.length; i++) {\n        if (form.elements[i].getAttribute('data-nette-rules')) {\n          break check;\n        }\n      }\n\n      return;\n    }\n\n    Nette.toggleForm(form);\n\n    if (form.noValidate) {\n      return;\n    }\n\n    form.noValidate = true;\n    form.addEventListener('submit', function (e) {\n      if (!Nette.validateForm(form)) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  Nette.initOnLoad = function () {\n    Nette.onDocumentReady(function () {\n      for (var i = 0; i < document.forms.length; i++) {\n        Nette.initForm(document.forms[i]);\n      }\n\n      document.body.addEventListener('click', function (e) {\n        var target = e.target;\n\n        while (target) {\n          if (target.form && target.type in {\n            submit: 1,\n            image: 1\n          }) {\n            target.form['nette-submittedBy'] = target;\n            break;\n          }\n\n          target = target.parentNode;\n        }\n      });\n    });\n  };\n  /**\n   * Converts string to web safe characters [a-z0-9-] text.\n   */\n\n\n  Nette.webalize = function (s) {\n    s = s.toLowerCase();\n    var res = '',\n        i,\n        ch;\n\n    for (i = 0; i < s.length; i++) {\n      ch = Nette.webalizeTable[s.charAt(i)];\n      res += ch ? ch : s.charAt(i);\n    }\n\n    return res.replace(/[^a-z0-9]+/g, '-').replace(/^-|-$/g, '');\n  };\n\n  Nette.webalizeTable = {\n    á: 'a',\n    ä: 'a',\n    č: 'c',\n    ď: 'd',\n    é: 'e',\n    ě: 'e',\n    í: 'i',\n    ľ: 'l',\n    ň: 'n',\n    ó: 'o',\n    ô: 'o',\n    ř: 'r',\n    š: 's',\n    ť: 't',\n    ú: 'u',\n    ů: 'u',\n    ý: 'y',\n    ž: 'z'\n  };\n  return Nette;\n});\n\n//# sourceURL=webpack:///./vendor/nette/forms/src/assets/netteForms.js?");

/***/ }),

/***/ "./www/js/web/web.js":
/*!***************************!*\
  !*** ./www/js/web/web.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack:///./www/js/web/web.js?");

/***/ }),

/***/ 1:
/*!***********************************************************************************************************************************!*\
  !*** multi ./vendor/nette/forms/src/assets/netteForms.js ./node_modules/nette-forms/src/assets/netteForms.js ./www/js/web/web.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! /mnt/wsl/docker-desktop-bind-mounts/Ubuntu-20.04/fa43aa92390a81e1d94f8182696d29e74b9ed0c2bfc6b026a4bb4e40f2ec6291/vendor/nette/forms/src/assets/netteForms.js */\"./vendor/nette/forms/src/assets/netteForms.js\");\n__webpack_require__(/*! /mnt/wsl/docker-desktop-bind-mounts/Ubuntu-20.04/fa43aa92390a81e1d94f8182696d29e74b9ed0c2bfc6b026a4bb4e40f2ec6291/node_modules/nette-forms/src/assets/netteForms.js */\"./node_modules/nette-forms/src/assets/netteForms.js\");\nmodule.exports = __webpack_require__(/*! /mnt/wsl/docker-desktop-bind-mounts/Ubuntu-20.04/fa43aa92390a81e1d94f8182696d29e74b9ed0c2bfc6b026a4bb4e40f2ec6291/www/js/web/web.js */\"./www/js/web/web.js\");\n\n\n//# sourceURL=webpack:///multi_./vendor/nette/forms/src/assets/netteForms.js_./node_modules/nette-forms/src/assets/netteForms.js_./www/js/web/web.js?");

/***/ })

/******/ });