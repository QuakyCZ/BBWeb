<?php

namespace App\Modules\WebModule\Presenter\Base;

use App\Repository\Primary\SettingsRepository;
use Contributte\Translation\Translator;
use Nette\Application\UI\Presenter;

class BasePresenter extends Presenter
{
    /** @persistent */
    public $locale;

    /** @var Translator @inject */
    public $translator;

    protected SettingsRepository $settingsRepository;

    /**
     * @param SettingsRepository $settingRepository
     * @return void
     */
    public function injectDependencies(
        SettingsRepository $settingRepository
    ): void {
        $this->settingsRepository = $settingRepository;
    }

    protected function startup()
    {
        parent::startup();
        $this->template->setTranslator($this->translator);
    }

    public function checkRequirements($element): void
    {
        $this->getUser()->getStorage()->setNamespace('web');
        parent::checkRequirements($element); // TODO: Change the autogenerated stub
    }

    protected function beforeRender()
    {
        $this->template->hosting = $this->settingsRepository->getSettingValue('hosting');
        $this->template->hostingUrl = $this->settingsRepository->getSettingValue('hosting-url');

        $alertEnabled = $this->settingsRepository->getByName('alert-enabled')['content'];
        $this->template->alertEnabled = $alertEnabled;

        if ($alertEnabled) {
            $alert = new \stdClass();
            $alert->icon = $this->settingsRepository->getByName('alert-icon')['content'];
            $alert->message = $this->settingsRepository->getByName('alert-message')['content'];
            $alert->backgroundColor = $this->settingsRepository->getByName('alert-bg-color')['content'];
            $alert->fontColor = $this->settingsRepository->getByName('alert-font-color')['content'];
            $alert->iconBackgroundColor = $this->settingsRepository->getByName('alert-icon-background-color')['content'];
            $this->template->alert = $alert;
        }
        parent::beforeRender(); // TODO: Change the autogenerated stub
    }
}
